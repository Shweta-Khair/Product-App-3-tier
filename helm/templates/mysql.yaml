apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.mysql.replicaCount }}
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: {{ .Values.mysql.image }}
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: {{ .Values.mysql.env.rootPassword | quote }}
            - name: MYSQL_DATABASE
              value: {{ .Values.mysql.env.database | quote }}
            - name: MYSQL_USER
              value: {{ .Values.mysql.env.user | quote }}
            - name: MYSQL_PASSWORD
              value: {{ .Values.mysql.env.password | quote }}
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-data
{{- if .Values.mysql.persistence.enabled }}
          persistentVolumeClaim:
            claimName: mysql-pvc
{{- else }}
          emptyDir: {}
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: {{ .Values.namespace }}
spec:
  type: {{ .Values.mysql.service.type }}
  selector:
    app: mysql
  ports:
    - port: {{ .Values.mysql.service.port }}
      targetPort: 3306
---
{{- if .Values.mysql.persistence.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: {{ .Values.namespace }}
spec:
  accessModes:
    - {{ .Values.mysql.persistence.accessMode }}
  resources:
    requests:
      storage: {{ .Values.mysql.persistence.size }}
  {{- if .Values.mysql.persistence.storageClass }}
  storageClassName: "{{ .Values.mysql.persistence.storageClass }}"
  {{- end }}
{{- end }}
